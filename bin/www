#!/usr/bin/env node
/*
 var debug = require('debug')('server');



 app.set('port', process.env.PORT || 3000);

 var server = app.listen(app.get('port'), function() {
 debug('Express server listening on port ' + server.address().port);
 });
 */
//var cluster = require("cluster");
/*
var opts = require("../config/servers");
var cp = require("child_process");

var args = {};
for(var key in opts) {
    args[key] = [];
    for(var pro in opts[key]){
        args[key].push(pro + "="+opts[key][pro]);
    }
}

for(var key in args){
    var count = +opts[key].count || 1;
    var args = [];
    for(var pro in opts[key]){
        args.push(pro + "="+opts[key][pro]);
    }
    for(var i = 0; i<count; i++){
        var fileName = process.cwd()+"\\"+key;
        fileName = fileName.replace(/\\/g,"/");
        cp.spawn('node',[fileName].concat(args));
    }
}
*/
//cp.spawn("node",["./oauth2.js"]);
var app = require('../app');
var cluster = require('cluster');
var numCPUs = require('os').cpus().length;
var log = require("../util/logger.js");
if (cluster.isMaster) {
    console.log("master start...");

    // Fork workers.
    for (var i = 0; i < numCPUs; i++) {
        cluster.fork();
    }

    cluster.on('listening',function(worker,address){
        log.error('listening: worker ' + worker.process.pid +', Address: '+address.address+":"+address.port);
    });

    cluster.on('exit', function(worker, code, signal) {
//        console.log('worker ' + worker.process.pid + ' died');
        log.error('worker ' + worker.process.pid + ' died');
        cluster.fork();//挂掉后重新添加一个
    });
} else {
    var server = app.listen(3000, function() {
        log.info('Express server listening on port ' + server.address().port);
    });
}

